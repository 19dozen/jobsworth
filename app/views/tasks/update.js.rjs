remotipart_response do
page << "jQuery('#flash').remove();"
if @task.valid?

  #update grid
  @task.reload
  customer = (@task.customers.first || @task.project.customer)
  milestone_str = [ @task.project.name ]
  milestone_str << @task.milestone.name if @task.milestone_id.to_i > 0
  due = @task.due_date.to_time.to_i unless @task.due_date.nil?
  time = @task.minutes_left.to_i
  attrs = {}
  current_user.company.properties.each do |prop|
    pv = @task.property_value(prop)
    if pv && pv.icon_url.present?
      page << "jQuery('.ui-sortable tr##{@task.task_num} td[aria-describedby=\"task_list_#{prop.name.downcase}\"]').html('#{image_tag(pv.icon_url)}');"
      page << "jQuery('.ui-sortable tr##{@task.task_num} td[aria-describedby=\"task_list_#{prop.name.downcase}\"]').attr('title', '#{pv.value}');"
    elsif pv
      attrs.merge! prop.name.downcase => pv.to_html
    end
  end
  attrs.merge! "summary" => h(@task.name) if @changes['name']
  attrs.merge! "client" => h(customer.name) if @changes['customer_id']
  attrs.merge! "due" => due if @changes['due_at']
  attrs.merge! "milestone" => milestone_str.join("/") if @changes['milestone_id']
  attrs.merge! "time" => time if @changes['duration']
  attrs.merge! "resolution" => @task.status_type if @changes['status']
  attrs.merge! "assigned" => @task.owners.map{ |u| u.name }.join(", ")
  attrs.each do |attr, val|
    if attr == "due" || attr == "time"
      page << "jQuery('.ui-sortable tr##{@task.task_num} td[aria-describedby=\"task_list_#{attr}\"]').html(#{attr}TaskValue(#{eval(attr)}));"
      page << "jQuery('.ui-sortable tr##{@task.task_num} td[aria-describedby=\"task_list_#{attr}\"]').attr('title', #{attr}TaskValue(#{eval(attr)}).replace(/<.*?>/g,\'\'));"
    else
      page << "jQuery('.ui-sortable tr##{@task.task_num} td[aria-describedby=\"task_list_#{attr}\"]').text('#{val}');"
      page << "jQuery('.ui-sortable tr##{@task.task_num} td[aria-describedby=\"task_list_#{attr}\"]').attr('title', '#{val}');"
    end
  end
  page << "jQuery.get('/tasks/edit/#{@task.task_num}?format=js', {}, function(data) {jQuery('#task').html(data);jQuery('div.log_history').tabs();});"
  page << "jQuery('#errorExplanation').remove();"
  page << "jQuery('span.fieldWithErrors').removeClass('fieldWithErrors')"
else
  page << "jQuery('#errorExplanation').remove();"
  page << "jQuery('span.fieldWithErrors').removeClass('fieldWithErrors')"
  page << "jQuery('#task_id').after('#{error_messages_for(:task)}');"
  page << 'jQuery("#errorExplanation > ul li").css("margin", "20px 0px 2px 30px")'
  @task.errors.each do |attr,err|
    page << "jQuery('#task_#{attr}').wrap('<span class=\"fieldWithErrors\" />')"
  end
end
end